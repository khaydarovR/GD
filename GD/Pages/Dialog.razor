@using LeafletForBlazor
@using LeafletForBlazor.RealTime.points
<MudDialog>
    <DialogContent>
        <RealTimeMap @ref="_realTimeMap" OnAfterMapLoaded="Callback" height="462px" width="462px"></RealTimeMap>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    RealTimeMap _realTimeMap = new();

    [Parameter]
    public double Lat { get; set; }

    [Parameter]
    public double Lon { get; set; }
    
    private void Submit() => MudDialog.Close(DialogResult.Ok(true));

    private void Cancel() => MudDialog.Cancel();

    private async Task Callback()
    {
        _realTimeMap.View.setZoomLevel = 18;
        _realTimeMap.View.setCenter = new()
        {
            latitude = Lat,
            longitude = Lon
        };

        Appearence(_realTimeMap);
        await Upload(_realTimeMap);
    }

    private void Callback(RealTimeMap.MapEventArgs obj)
    {
        throw new NotImplementedException();
    }

    private void Appearence(RealTimeMap rtm)
    {
        rtm.Geometric.Points.AppearanceOnType(p => p.type == "Point").pattern = new RealTimeMap.PointIcon
        {
            iconUrl = "https://cdn-icons-png.flaticon.com/512/252/252025.png",
            iconSize = [32, 32],
            iconAnchor = [16, 16],
        };
    }

    private async Task Upload(RealTimeMap rtm)
    {
        if (rtm != null)
        {
            await rtm.Geometric.Points.upload([new RealTimeMap.StreamPoint
            {
                latitude = Lat,
                longitude = Lon,
                type = "Point"
            }]);
        }
    }
}