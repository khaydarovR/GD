@page "/dashboard"
@using GD.Shared.Response

@inject HttpClient Http

<h3>Dashboard Page</h3>

<div>
    <h4>Отчет по заказам по дням</h4>
    <MudChart ChartOptions="options" ChartType="ChartType.Line" ChartSeries="@DailyOrderSeries" XAxisLabels="@XAxisLabels.ToArray()"
              Width="100%" Height="550px"></MudChart>
    <MudText Typo="Typo.h6">Общая статистика по заказам</MudText>
</div>

@code {
    ChartOptions options = new()
        {
            YAxisTicks = 1,

        };
    private List<ChartSeries> DailyOrderSeries { get; set; }  
    private List<string> XAxisLabels { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await LoadOrderStatistics();
    }

    private async Task LoadOrderStatistics()
    {
        var response = await Http.GetFromJsonAsync<OrderStatisticsResponseDTO>("api/reports/order-statistics");

        DailyOrderSeries = new List<ChartSeries>();
        XAxisLabels = new List<string>();

        // Инициализируем временные коллекции для различных статусов
        var successfulOrders = new List<double>();
        var failedOrders = new List<double>();
        var selectingOrders = new List<double>();
        var waitingOrders = new List<double>();
        var inDeliveryOrders = new List<double>();
        var deliveredOrders = new List<double>();

        foreach (var dailyStat in response.DailyStatistics)
        {
            XAxisLabels.Add(dailyStat.Date.ToString("dd.MM"));

            successfulOrders.Add(dailyStat.SuccessfulOrders);
            failedOrders.Add(dailyStat.FailedOrders);
            selectingOrders.Add(dailyStat.SelectingOrders);
            waitingOrders.Add(dailyStat.WaitingOrders);
            inDeliveryOrders.Add(dailyStat.InDeliveryOrders);
            deliveredOrders.Add(dailyStat.DeliveredOrders);
        }

        DailyOrderSeries.Add(new ChartSeries { Name = "Успешные", Data = successfulOrders.ToArray() });
        DailyOrderSeries.Add(new ChartSeries { Name = "Неудачные", Data = failedOrders.ToArray() });
        DailyOrderSeries.Add(new ChartSeries { Name = "В сборке", Data = selectingOrders.ToArray() });
        DailyOrderSeries.Add(new ChartSeries { Name = "В ожидании", Data = waitingOrders.ToArray() });
        DailyOrderSeries.Add(new ChartSeries { Name = "В доставке", Data = inDeliveryOrders.ToArray() });
        DailyOrderSeries.Add(new ChartSeries { Name = "Доставленные", Data = deliveredOrders.ToArray() });
    }
}

<style>


    .mud-chart-legend-item{
        font-size: xx-large !important;
    }
</style>